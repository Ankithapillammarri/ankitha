package com.capgemini.librarymanagementsystemcucumber.stepdefinitions;

import java.util.List;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.capgemini.librarymanagementsystemcucumber.testrunner.TestRunner;

import cucumber.api.DataTable;
import cucumber.api.java.Before;
import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;

public class AdminSteps extends TestRunner {

	@Before
	public void openBrowser() throws Exception {
		driver = new ChromeDriver();
		driver.get("http://localhost:4200/login");

		wait = new WebDriverWait(driver, 10);
		action = new Actions(driver);
		// driver.manage().window().maximize();
		driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);
	}

	@Given("^Admin is on Login page$")
	public void admin_is_on_Login_page() throws Throwable {
		Thread.sleep(5000);
		String actual = driver.getTitle();
		String excepted = "LmsAngular";
		System.out.println(actual);
//		assertTrue("The webpage is not a login page", actual.equals(excepted));
	}

	@When("^Admin enters username and password$")
	public void admin_enters_username_and_password(DataTable arg1) throws Throwable {
		List<List<String>> ele = arg1.raw();
		driver.findElement(By.id("email")).sendKeys(ele.get(0).get(0));
		driver.findElement(By.id("password")).sendKeys(ele.get(0).get(1));
		driver.findElement(By.xpath("//button[text()='login']")).click();
	}

	@Then("^Admin should be logged in$")
	public void admin_should_be_logged_in() throws Throwable {
		String actual = driver.getCurrentUrl();
		String excepted = "http://localhost:4200/login";
		System.out.println(actual);
		// assertTrue("Admin logged in successfully", actual.equals(excepted));
	}

	@Given("^Admin is on adding book page$")
	public void admin_is_on_adding_book_page() throws Throwable {
		
		  driver.findElement(By.xpath("//a[contains(text(),'Librarian')]")).click();
		  driver.findElement(By.xpath(
		  "/html/body/app-root/app-admin/div/div[1]/button/a")).click();
		 
	}

	@When("^Admin enters book details$")
	public void admin_enters_book_details(DataTable arg1) throws Throwable {
		
		  List<List<String>> ele = arg1.raw();
		  driver.findElement(By.id("bookName")).sendKeys(ele.get(0).get(0));
		  driver.findElement(By.id("author")).sendKeys(ele.get(0).get(1));
		  driver.findElement(By.id("category")).sendKeys(ele.get(0).get(2));
		  driver.findElement(By.id("publisher")).sendKeys(ele.get(0).get(3));
		  
		  driver.findElement(By.xpath("//button[@type='submit']")).click();
		 
	}

	@Given("^Admin is on removing book page$")
	public void admin_is_on_removing_book_page() throws Throwable {
	}

	@Then("^Book deleted successfully$")
	public void book_deleted_successfully() throws Throwable {

	}

}
